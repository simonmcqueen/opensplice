#
# DDSTouchStone: a scenario-driven Open Source benchmarking framework
# for evaluating the performance of OMG DDS compliant implementations.
#
# Copyright (C) 2008-2009 PrismTech Ltd.
# ddstouchstone@prismtech.com
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License Version 3 dated 29 June 2007, as published by the
# Free Software Foundation.

# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with DDSTouchStone; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

include $(CONFIG_DIR)/Makefile.defs_c

.PHONY: clean

STAMP_NAME	 := .STAMP

TOOLS_DIR	 := tools
TOOLS		 := errorlog
TOOLS            += excelerator
TOOLS            += recorder
TOOLS            += spotter
TOOLS            += watcher
TOOLSHELPERS     := commandHelpers
TOOLS_FILES      := $(addprefix $(TOOLS_DIR)/,$(addsuffix .c,$(TOOLS) $(TOOLSHELPERS)))
TOOLS_OBJS       := $(addprefix $(OBJ_DIR)/,$(addsuffix .o,$(TOOLS)))
TOOLSHELPERS_OBJS:= $(addprefix $(OBJ_DIR)/,$(addsuffix .o,$(TOOLSHELPERS)))
TOOLS_BINS       := $(addprefix $(BIN_CONFIG_DIR)/, $(TOOLS))
GEN_DIR          := $(GEN_BASE_DIR)/c
GEN_FILES	 := $(addprefix $(GEN_DIR)/,$(GENERATED_C_FILES))
GEN_OBJ_DIR      := $(OBJ_DIR)/c
GEN_OBJS	 := $(addprefix $(GEN_OBJ_DIR)/, $(GENERATED_C_OBJS))


#funtions for easily passing parms to the compiler/linker
idirs 	= $(addprefix -I, $(1))
ldirs	= $(addprefix -L, $(1))
llibs	= $(addprefix -l, $(1))

all: link
link: compile $(BIN_CONFIG_DIR)/$(STAMP_NAME) $(TOOLS_BINS)
compile: generated $(OBJ_DIR)/$(STAMP_NAME) $(GEN_OBJ_DIR)/$(STAMP_NAME) $(GEN_OBJS) $(GEN_TOOLS_OBJS) $(OS_OBJS) $(TOOLS_OBJS)
generated: $(GEN_DIR)/$(STAMP_NAME) $(GEN_FILES)

tools: $(TOOLS_BINS)

$(GEN_FILES): $(GEN_DIR)/$(STAMP_NAME) $(IDL_NAME)
	@echo Creating type-specific C code from $(IDL_DIR)/$(IDL); \
	sh $(TOUCHSTONE_HOME)/$(SCRIPTS_DIR)/$(DDS_VENDOR)/idlCompilation.sh $(IDL_DIR)/$(IDL) $(GEN_DIR) c "$(call idirs, $(DDS_C_INCLUDE_DIRS))"

$(GEN_OBJ_DIR)/%.o:$(GEN_DIR)/%.c
	@echo Compiling generated file $<; \
	$(C_COMPILER) $(C_COPTIONS) -c $< -o $@ $(call idirs, $(DDS_C_INCLUDE_DIRS))

$(OBJ_DIR)/%.o:$(OS_DIR)/%.c
	@echo Compiling OS abstraction layer file $<; \
	$(C_COMPILER) $(C_COPTIONS) -c $< -o $@ $(call idirs, $(OS_INCLUDE_DIRS))

$(OBJ_DIR)/%.o:$(TOOLS_DIR)/%.c
	@echo Compiling tool file $<; \
	$(C_COMPILER) $(C_COPTIONS) -c $< -o $@ $(call idirs, $(OS_INCLUDE_DIRS)) $(call idirs, $(VENDOR_INCLUDE_DIRS)) $(call idirs, $(GEN_DIR) $(DDS_C_INCLUDE_DIRS))

$(BIN_CONFIG_DIR)/%:$(OBJ_DIR)/%.o $(GEN_OBJS) $(OS_OBJS) $(TOOLSHELPERS_OBJS)
	@echo Linking tool executable $@; \
	$(C_LINKER) $(C_LINKOPTS) $< $(GEN_OBJS) $(OS_OBJS) $(TOOLSHELPERS_OBJS) $(call ldirs, $(DDS_LIB_DIRS)) $(call llibs, $(DDS_C_LIBS)) $(call llibs, $(C_SYSLIBS)) -o $@

%/$(STAMP_NAME):
	@mkdir -p $(@D); \
	touch $@

ALL_FILES :=  $(TOOLS_BINS) $(TOOLS_OBJS) $(TOOLSHELPERS_OBJS)

clean:
	@for ff in $(ALL_FILES); do if test -f $$ff; then echo Removing file $$ff; rm $$ff; fi; done;

#dependencies are filled manually here... 
#TODO
